{"version":3,"sources":["Header.js","Footer.js","Intro.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","class","style","marginBottom","backgroundColor","color","Brand","href","Toggle","Collapse","Nav","NavItem","eventKey","pullRight","NavDropdown","title","id","MenuItem","divider","Component","Footer","Grid","Row","Col","xs","md","src","alt","DescriptionComponent","className","Intro","Fragment","src_Header_0","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_Intro","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1e0b3d2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Nav, Navbar, NavItem, MenuItem, NavDropdown } from \"react-bootstrap\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Navbar\n        class=\"customNavbar\"\n        style={{\n          marginBottom: \"0\",\n          backgroundColor: \"rgb(155, 40, 59)\",\n          color: \"white\"\n        }}\n      >\n        <Navbar.Header>\n          <Navbar.Brand>\n            <span href=\"#home\" style={{ color: \"white\" }}>\n              TAPADKOT?\n            </span>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav>\n            <NavItem eventKey={1} href=\"#\">\n              <span style={{ color: \"white\" }}>Logements</span>\n            </NavItem>\n            <NavItem eventKey={2} href=\"#\">\n              <span style={{ color: \"white\" }}>Invite un Membre</span>\n            </NavItem>\n          </Nav>\n          <Nav pullRight>\n            <NavDropdown\n              eventKey={3}\n              title=\"mon compte\"\n              id=\"basic-nav-dropdown\"\n            >\n              <MenuItem eventKey={3.1}>Action</MenuItem>\n              <MenuItem eventKey={3.2}>Another action</MenuItem>\n              <MenuItem eventKey={3.3}>Something else here</MenuItem>\n              <MenuItem divider />\n              <MenuItem eventKey={3.4}>Separated link</MenuItem>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <div class=\"phantom\">\n      <div class=\"footer\">\n        <Grid>\n          <Row>\n            <Col xs={4} md={4}>\n              <h1>Liens utiles</h1>\n              <ul>\n                <li>\n                  <a>Comment ça marche</a>\n                </li>\n                <li>\n                  <a>Foire aux questions</a>\n                </li>\n                <li>\n                  <a>Nous contacter</a>\n                </li>\n              </ul>\n            </Col>\n            <Col xs={4} md={4}>\n              <h1>À propos</h1>\n              <ul>\n                <li>\n                  <a>Qui sommes-nous?</a>\n                </li>\n                <li>\n                  <a>Nos partenaires</a>\n                </li>\n              </ul>\n            </Col>\n            <Col xs={4} md={4}>\n              <h1>Légal</h1>\n              <ul>\n                <li>\n                  <a>Conditions générales</a>\n                </li>\n                <li>\n                  <a>Mentions légales</a>\n                </li>\n                <li>\n                  <a>Protections des données</a>\n                </li>\n              </ul>\n            </Col>\n          </Row>\n          <Row>\n            <a href=\"https://jeremyy55.github.io/react-umons-project/\">\n              <img src={\"/img/GitHub-Mark-32px.png\"} alt=\"Github\" />\n            </a>\n            <a href=\"#\" />\n            <img src={\"/img/Facebook-42px.png\"} alt=\"facebook\" />\n          </Row>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport \"./intro.css\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\n\nfunction DescriptionComponent() {\n  return (\n    <Grid>\n      <Row className=\"show-grid\">\n        <Col xs={2} md={2} />\n        <Col xs={8} md={8}>\n          <h1 class=\"fsh1 centered marginTop\">TAPADKOT?</h1>\n          <p class=\"fsp centered\">\n            Tu rencontres des difficultés de logement alors que tu viens visiter\n            l'Umons? <br />\n            Tu quittes ton kot pendant quelques temps et désires le rendre\n            disponible lors de tes déplacements?\n          </p>\n          <h2 class=\"fsh2 centered\"> L'umons a une solution!</h2>\n          <p class=\"fsp centered padbot\">\n            TAPADKOT, la plateforme de réservation de logement en ligne de\n            l'Umons est exactement ce qu'il te faut!\n          </p>\n        </Col>\n        <Col xs={2} md={2} />\n      </Row>\n    </Grid>\n  );\n}\n\nclass Intro extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <img\n          class=\"banner\"\n          src=\"http://www.robertviseur.be/news-pic/mons-20100307-panorama-h400.jpg\"\n          alt=\"banner\"\n        />\n        <DescriptionComponent />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Intro;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Intro from \"./Intro\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Intro />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}